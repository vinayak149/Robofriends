{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/ErrorBoundry.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","map","user","i","Searchbox","searchfield","searchChange","type","placeholder","onChange","ErrorBoundry","state","hasError","error","info","this","setState","children","Component","Scroll","style","overflowY","border","height","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAiBeA,EAfF,SAACC,GACb,IAAOC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GACrB,OAEC,sBAAKC,UAAY,sDAAjB,UACK,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACA,6BAAKF,IACL,kCAAKC,EAAL,cCcSK,EArBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACC,8BAEMA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHXS,SCORC,EAfG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC/B,OAEC,qBAAKV,UAAY,MAAjB,SACA,uBACCA,UAAY,mCACZW,KAAO,SACPC,YAAc,gBACdC,SAAYH,OCaDI,E,kDApBd,WAAYlB,GAAQ,IAAD,8BAClB,cAAMA,IACDmB,MAAQ,CACZC,UAAU,GAHO,E,qDAOnB,SAAkBC,EAAMC,GACvBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAI1B,WACC,OAAGG,KAAKJ,MAAMC,SACN,6DAEDG,KAAKvB,MAAMyB,a,GAjBOC,aCQZC,G,MARA,SAAC3B,GACf,OACK,qBAAK4B,MAAO,CAACC,UAAW,SAAUC,OAAS,kBAAmBC,OAAQ,SAAtE,SACH/B,EAAMyB,aCkDMO,E,kDA7Cb,aAAc,IAAD,8BACX,gBAMFC,eAAiB,SAACC,GAChB,EAAKV,SAAS,CAACX,YAAaqB,EAAMC,OAAOC,SANzC,EAAKjB,MAAQ,CACXX,OAAQ,GACRK,YAAa,IAJJ,E,qDAYb,WAAoB,IAAD,OACjBwB,MAAM,8CACJC,MAAK,SAAAC,GAAY,OAAOA,EAASC,UACjCF,MAAK,SAAAG,GAAU,EAAKjB,SAAS,CAAChB,OAAQiC,S,oBAE1C,WAAS,IAAD,OACAC,EAAiBnB,KAAKJ,MAAMX,OAAOmC,QAAO,SAAAnC,GAC9C,OAAOA,EAAOP,KAAK2C,cAAcC,SAAS,EAAK1B,MAAMN,YAAY+B,kBAGnE,OAAgC,IAA7BrB,KAAKJ,MAAMX,OAAOsC,OACZ,yCAGR,sBAAK1C,UAAY,KAAjB,UACE,oBAAIA,UAAW,KAAf,0BACA,cAAC,EAAD,CAAWU,aAAcS,KAAKU,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,CAAUzB,OAAQkC,e,GAhCPhB,aCGHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.66cd37ab.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n\tconst {name, email, id} = props\nreturn(\n\n\t<div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n      <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n      <div>\n      <h2>{name}</h2>\n      <p> {email} </p>\n      </div>\n    </div>  \n\t);\n\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card'\n\nconst CardList = ({ robots }) => {\n\treturn(\n\t\t<div>\n    {\n        robots.map((user, i)=>{\n            return(\n                <Card\n                 key ={i}\n                 id={robots[i].id}\n                 name={robots[i].name}\n                 email={robots[i].email}\n                />\n            );\n        })\n      }\n    </div>\n\n\n   );\n}\n\nexport default CardList;","import React from 'react';\n\nconst Searchbox = ({searchfield, searchChange}) => {\n \treturn(\n \t\t\n \t\t<div className = 'pa2'>\n \t\t<input \n \t\t\tclassName = 'pa3 ba b--green bg-lightest-blue'\n \t\t\ttype = 'search'\n \t\t\tplaceholder = 'search robots' \n \t\t\tonChange = {searchChange}/>\n \t\t\t\n \t\t</div>\t\n \t\t)\n\n}\n\nexport default Searchbox;","import React, {Component} from 'react';\n\nclass ErrorBoundry extends Component{\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\n\tcomponentDidCatch(error,info){\n\t\tthis.setState({hasError: true})\n\t}\n\n\n\trender() {\n\t\tif(this.state.hasError){\n\t\t\treturn <h1>oooops. something is wrong!</h1>\n\t\t}\n\t\treturn this.props.children\n\n\t}\n}\nexport default ErrorBoundry;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n      <div style={{overflowY: 'scroll', border : '5px solid black', height: '800px'}}>\n\t\t{props.children}\n\t  </div>\n\t\t)\n};\n\nexport default Scroll;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport Searchbox from '../components/Searchbox';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\nimport Scroll from '../components/Scroll';\n\n\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n  onSearchChange = (event) =>{\n    this.setState({searchfield: event.target.value })\n   \n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n     .then(response=> {return response.json();})\n     .then(users =>{ this.setState({robots: users})})\n  }\n  render(){\n    const filteredRobots = this.state.robots.filter(robots =>{\n      return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n       \n    })\n    if(this.state.robots.length === 0){\n      return <h1>Loading</h1>\n    }  else { \n      return(\n     <div className = 'tc'>\n       <h1 className ='f1'> RoboFriends</h1>\n       <Searchbox searchChange={this.onSearchChange}/>\n       <Scroll>\n       <ErrorBoundry>\n       <CardList robots={filteredRobots}/>\n       </ErrorBoundry>\n       </Scroll>\n     </div> \n    );\n  }\n\n   \n  }\n\t\n\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}